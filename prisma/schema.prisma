// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token_expires_in      Int?
  refresh_token_expires_in Int?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id               String    @id @default(cuid())
  name             String?
  email            String?   @unique
  emailVerified    DateTime?
  image            String?
  accounts         Account[]
  sessions         Session[]
  dashboardConfigs DashboardConfig[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model DashboardConfig {
    id             String @id @default(cuid())
    dashboardType  DashboardType
    env            String
    typeId         String
    userId         String
    user           User @relation(fields: [userId], references: [id])
    dashboardCells DashboardCell[]
}

enum DashboardType {
    SAS
    APP_MODULE
    DEPLOYMENT_UNIT
}

enum StatType {
    SYSTEM_DISK_USAGE
    SYSTEM_RAM_USAGE
    SYSTEM_BANDWIDTH
    SYSTEM_CPU_USAGE
    GATE
    HEALTHCHECK
    STATS_AVG_BUILD_TIME
    STATS_LAST_DEPLOYMENT_BUILD_TIME
    STATS_GATES_FAILED_PASSED
}

model DashboardCell {
    id                String @id @default(cuid())
    statId            String?
    dashboardConfigId String
    dashboardConfig   DashboardConfig @relation(fields: [dashboardConfigId], references: [id])
    statType          StatType
    x                 Int
    y                 Int
    w                 Int
    h                 Int
}

model RamUsageMock {
    id         String @id @default(cuid())
    amountInMB Int
    time       String
    cellId     String
}